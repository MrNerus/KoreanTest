::-webkit-scrollbar { width: 1rem; border-radius: 0.25rem; overflow: hidden;}
/* Track */
::-webkit-scrollbar-track { background: #2327ff88; }
::-webkit-scrollbar-thumb { background: var(--color2); border-radius: 0.25rem; }
::-webkit-scrollbar-thumb:hover { background: var(--color1); }


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    box-shadow: none;
}

:root {
    --color1: #ff0a6c;
    --color2: #2d27ff;
    --gradient: linear-gradient(90deg, var(--color1) 0%, var(--color2) 100%);
    --gradient_reverse: linear-gradient(90deg, var(--color2) 0%, var(--color1) 100%)
}

.isFlex {display: flex;}
.flexRow {flex-direction: row;}
.flexCol {flex-direction: column;}
.flexWrap {flex-wrap: wrap;}
.flexGrow {flex-grow: 1;}
.centerElement {align-items: center; justify-content: center;}
.alignCenter {align-items: center;}
.justifyCenter {justify-content: center;}
.spaceBetween {justify-content: space-between;}
.gap {gap: 1rem;}

.autoGrid {display: grid; grid-template-columns: repeat(auto-fit, minmax(min(15rem, 100%), 1fr));}
.flexGrid {display: flex; flex-wrap: wrap; gap: 1rem; }
.flexGrid > * {flex: 1}

.roundCorner { border-radius: 1rem; }
.padding { padding: 0.5rem 1rem;}
.noStyle {border: none; box-shadow: none; list-style-type: none; text-decoration: none;}


body {
    height: 100vh;
    height: 100svh;
    width: 100%;
    overflow: hidden;
    background: var(--gradient);
}

.glass_frame {
    background-color: #ffffff30;
    width: clamp(30rem, 70%, 50rem);
    height: 70%;
    backdrop-filter: blur(0.5rem);
    overflow-y: auto;
}

.problem_statement {
    font-size: 2rem;
    font-weight: 400;
}

.problem {
    width: 100%;
    background-color: #ffffff30;
    backdrop-filter: blur(0.5rem);
    border: 2px solid transparent;
}

.hidden {display: none;}

.answer {
    background-color: #d1c3f7;
    backdrop-filter: blur(0.5rem);
    position: relative;
    overflow: hidden;
    cursor: pointer;
    transition: 0.2s ease-in-out;
}
.answer > input[type="radio"]{
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    opacity: 0%;
    cursor: pointer;
}
.answer:has(> input[type="radio"]:checked) {
    background: var(--gradient_reverse);
    color: #f5f5f5;
}
.answer.showAnswer:has(> input[type="radio"]:not(:checked)):has(> input[isCorrect="true"]) {
    background: #6600ff;
    color: #f5f5f5;
}

.problems {width: 100%;}
.controls {width: 100%;}
.controls > * { cursor: pointer;}
.checkButton {background-color: #6600ff; color: #f5f5f5;}
.backButton {background-color: #f5f5f5; cursor: pointer;}


.playButton {background-color: #f5f5f5; cursor: pointer;}
